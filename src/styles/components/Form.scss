@import "../base/dependencies";

/* @import "Form/Form";
@import "Form/responsive";
@import "Form/translations"; */

$autofill:"&:-webkit-autofill,&:-webkit-autofill:hover,&:-webkit-autofill:focus";
$placeholder:"&::placeholder,&::-webkit-input-placeholder";

@mixin errors {}

.Form {
	width: 100%;

	form {
		position: relative;
	}

	.hs-form fieldset {
		max-width: 100%;
		position: relative;
		width: 100%;

		.field {
			/* Should be removed after everything is migrated, and handled in Hubspot directly. */
			width: 100% !important;

			.input {
				margin-right: 0;
			}

			.hs-input {
				width: 100%;

				&[type="checkbox"],
				&[type="radio"] {
					width: auto;
				}
			}
		}
	}

	.field {
		margin-bottom: 16px;

		&>label {
			margin-bottom: 4px;
		}
	}

	.hs-input {
		appearance: none;
		background: #FFF none;
		border: 1px solid $soft;
		border-radius: 6px;
		box-sizing: border-box;
		color: $ash;
		font-size: 16px;
		letter-spacing: 0.02em;
		outline: 1px solid transparent;
		padding: 8px min(2vw, 16px) 7px;
		transition-duration: 0.3s;
		transition-property: background-color, border-color, color, outline;
		width: 100%;

		&:focus,
		&:focus-visible {
			outline: 1px solid $lightAsh;
		}

		#{$placeholder} {
			color: rgba($reflex, 0.4);
		}

		#{$autofill} {
			box-shadow: inset 0 0 200px #FFF, inset 0 0 200px #FFF, inset 0 0 200px #FFF;
			color: $ash;
			-webkit-text-fill-color: $ash;
		}

		&.error {
			border-color: $red;
			color: $red;

			#{$placeholder} {
				color: rgba($red, 0.4);
			}

			#{$autofill} {
				color: $red;
				-webkit-text-fill-color: $red;
			}

		}
	}

	.hs-fieldtype-select {
		.input {
			&:before {
				border-color: $lightAsh transparent transparent;
				border-style: solid;
				border-width: 8px 6px 0;
				content: "";
				position: absolute;
				right: 8px;
				top: calc(50% - 4px);
				transition: border-color 0.3s;
				z-index: 10;
			}
		}

		&:has(.error) .input:before {
			border-top-color: $red;
		}
	}

	select {
		cursor: pointer;
	}

	option {
		&[disabled] {
			color: rgba($ash, 0.4);
		}
	}

	textarea {
		min-height: 5em;
	}

	label {
		color: $ash;
		display: block;
		font-size: 12px;
		letter-spacing: 0.02em;
	}

	.hs-fieldtype-checkbox,
	.hs-fieldtype-booleancheckbox {
		$fontSize: 14px;
		font-size: $fontSize;

		label {
			align-items: flex-start;
			display: flex;
			font-size: $fontSize;
			position: relative;

			&>span {
				display: block;
				margin-left: 0;
				padding-left: 12px;
			}
		}

		input[type="checkbox"] {
			border: 1px solid $reflex;
			border-radius: 4px;
			cursor: pointer;
			flex: 0 0 1.2em;
			height: 1.2em !important;
			max-width: 1.2em !important;
			opacity: 0;
			padding: 0;
			width: 1.2em !important;
		}

		input {
			&+span {
				&:before {
					$size: 1.2em;
					background-color: #FFF;
					background-image: none;
					background-position: center;
					background-repeat: no-repeat;
					background-size: contain;
					border: 1px solid $lightAsh;
					border-radius: 6px;
					content: " ";
					cursor: pointer;
					height: $size;
					left: 0;
					margin: 0;
					max-height: $size;
					max-width: $size;
					padding: 0;
					position: absolute;
					top: 0;
					transition: border-color 0.3s, box-shadow 0.3s;
					width: $size;

				}

				&:hover:before {
					box-shadow: 1px 1px 6px rgba(#000, 0.4);
				}
			}

			&:checked+span:before {
				background-image: url("../../img/controls/check_light_ash.svg");
			}
		}

		&:has(.hs-error-msgs) {
			label span {
				color: $red;

				&:before {
					border-color: $red;
				}
			}
		}

		.hs-error-msgs {
			margin: 4px 0 0 32px;
		}

		.hs-error-msg {
			font-size: 12px;
		}
	}

	.hs-fieldtype-checkbox {
		&>label {
			.hs-form-required {
				display: none;
			}
		}

		label.hs-form-checkbox-display>span {
			&:after {
				color: $red;
				content: "*";
				font-weight: 900;
				margin-left: 4px;
			}
		}
	}

	.hs-fieldtype-file {
		input[type="file"] {
			height: 2.2em;
			padding-bottom: 0;
			padding-top: 0;

			&::file-selector-button {
				background-color: $reflex;
				border: none;
				color: #FFF;
				cursor: pointer;
				height: 100%;
				padding: 0 1em;
				transition: background-color 0.3s;

				&:hover {
					background-color: $cerulean;
				}
			}
		}

		&.has_error {
			input[type="file"] {
				color: $red;
			}
		}
	}

	.hs-field-desc {
		color: rgba(80, 89, 105, .8);
		font-size: 13px;
		line-height: 140%;
		margin: 8px 0;
		order: 2;
	}

	.inputs-list {
		list-style-type: none;
		margin: 4px 0 0;
		padding: 0;
	}

	.actions {
		margin-top: 12px;
		text-align: center;
	}

	.hs-button {
		@include cta;
		background-color: $reflex;
		color: #FFF;

		&:hover {
			background-color: $cerulean;
		}
	}

	.hs-form-required {
		color: $red;
		font-weight: 900;
		margin-left: 4px;
	}

	.hs-error-msgs {
		margin: 4px 0 0;
		padding: 0;

		li {
			margin: 0;
			padding: 0;
		}
	}

	.hs-error-msg {
		color: $red;
		letter-spacing: 0em;
		line-height: 120%;
	}

	.hs_error_rollup {
		background: #FDD;
		border: 1px solid $red;
		border-radius: 8px;
		margin-bottom: 20px;
		padding: 6px 8px 8px;

		.hs-error-msgs {
			border-radius: 8px;
		}

		.hs-main-font-element {
			@include fontBold;
			color: $red;
			font-size: 14px;
			padding: 4px;
		}
	}

	&.bg_dark {
		a {
			color: $cerulean;

			&:hover {
				color: $scarlet;
			}
		}

		label {
			color: #FFF;
		}

		.hs-error-msg {
			color: $red;
		}

		.hs-button {
			border: 1px solid #FFF;

			&:hover {
				border-color: $cerulean;
			}
		}

		.submitted-message {
			p {
				color: #FFF;
			}
		}

		.Loading .line {
			border-color: #FFF #FFF #FFF transparent;
		}
	}

	.Loading {
		left: 0;
		position: relative;
		top: 0;
		transform: none;
	}

	&.loaded {
		.Loading {
			display: none;
		}
	}

	.submitted-message {
		&:before {
			background: transparent url("../../img/ui/check_circle_green.svg") no-repeat;
			background-size: contain;
			content: "";
			display: block;
			height: 120px;
			margin: 0 auto 30px;
			width: 120px;
		}

		p {
			margin: 0 0 1em;

			&.em {
				color: $cerulean;
			}

			&:last-child {
				margin-bottom: 0;
			}
		}
	}

	&.email_only {
		$height: 44px;

		fieldset {
			&:not(:first-child) {
				width: 0%;
			}
		}

		.hs_email {
			margin: 0;

			label {
				display: none;
			}
		}

		input[type="email"] {
			border: 1px solid $soft;
			border-radius: 100px;
			height: #{$height + 1};
		}

		.hs_submit {
			position: absolute;
			right: 0;
			top: 0;
		}

		.actions {
			margin-top: 0;
		}

		.hs-button {
			height: $height;
		}

		.Loading {
			min-height: 100px;
			transform: scale(0.8);
		}
	}

	&.hide_labels {
		.field>label {
			display: none;
		}
	}

	[class*="hs_clearbit___"] label {
		display: none;
	}

}

.CustomInput {
	border: 1px solid $soft;
	border-radius: 8px;
	font-size: 14px;
	height: 2.9em;
	outline: 1px solid transparent;
	transition: outline 0.3s;

	.input {
		background: transparent none;
		border: none;
		border-radius: 8px;
		color: $ash;
		font-size: 1em;
		height: 100%;
		outline: none;
		padding: 0 14px;
		width: 100%;

		&::placeholder {
			color: $lightAsh;
		}

	}

	&:has(.input:active,
		.input:focus) {
		outline: 1px solid $reflex;
	}
}

.ClearableSelect {
	.input {
		max-width: calc(100% - 14px);
	}

	option {
		padding: 8px;
	}

	.select_indicator {
		align-items: center;
		appearance: none;
		background: #FFF;
		border: 0 none;
		border-radius: 8px;
		color: $ash;
		display: flex;
		font-size: 20px;
		height: 100%;
		justify-content: center;
		position: absolute;
		right: 0;
		top: 0;
		transition: color 0.3s;
		width: 46px;
		z-index: 10;

		&.unfold {
			pointer-events: none;

			img {
				height: 12px;
				width: 12px;
			}
		}

		&:hover {
			color: $cerulean;
		}
	}
}

.SearchText {
	&:before {
		background: url("../../img/icons/search.svg");
		background-position: center;
		background-repeat: no-repeat;
		background-size: 50%;
		content: "";
		display: block;
		height: 100%;
		left: 0;
		position: absolute;
		width: 40px;
		z-index: 5;
	}

	.input {
		padding-left: 40px;
	}
}

@media (min-width:$sm) {
	.Form {
		.actions {
			text-align: right;
		}
	}
}